Express:-

const express=require('express')
const app=express();
const PORT=5000;
app.get('/',(req,res)=>{
    res.status(200).send("Welcome to swaroop store");
})


app.get('/registration',(req,res)=>{
    res.status(200).send("Welcome to registration page of store");
})

app.listen(PORT,()=>{
    console.log(`server is up and runinng at port:${PORT}`)
})


installations:-
dotenv
bcryptjs
jsonwebtoken
zod


User modals and schema:-
schema:- Defines the structure of the documents within a collection.
It specifies the fields, their types and any additional constraints or validations.


JWT:- Json web tokens

used for transmitting data between parties as a JSON object.
used for authentication and authorization.
Three parts:-
1. Header:- Contains the type of token and the hashing algorithm.
2. Payload:- Contains the actual data.
3. Signature:- Contains the encoded data.

Tokens such JWT are not stored in the database.
Instead they are issued by the server during the authentication process.
Then it is sent to the client.
The client will then use the token to authenticate the user.


link:- https://jwt.io/


// Error middleware:-  Its is 
const errorMiddleware = (err, req, res, next) => {
  const status = err.status || 500;
  const message = err.message || "Backend Error";
  const extraDetails = err.extraDetails || "Error from backend";
  res.status(status).json({ message, extraDetails });
};

module.exports = errorMiddleware;


